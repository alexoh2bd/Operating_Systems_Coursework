In this exercise, I created multiple page faults by mallocing 16834 bytes and setting the memory to 'p's so that the full space is used. I make sure to print the pointer address. As seen in the sample output, we notice that the mapped address is 0x3147c4009600. We also notice that this address is responsible for third page fault after the print statement under cpu 4. We see subsequent page faults at 3147c400a000, 3147c00b000, 3147c400c000, 3147c400d000. The difference between each of these page faults is 4096 bytes. The difference between the 9600 and the a000 page fault is 2560. I believe that the memory of 2596 bytes were set, a page fault was called at the a000 address, and then another page of memory was set until the memory address reached b000, and so forth until 16834 bytes were set. 

The page size is 4096.
